name: Update Volunteer Data
on:
  schedule:
    - cron: '0 * * * *'  # Каждый час
  workflow_dispatch:     # Ручной запуск

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        run: |
          sudo apt-get update
          # Устанавливаем только jq (iconv уже в системе)
          sudo apt-get install -y jq
          # Проверяем наличие iconv
          if ! command -v iconv >/dev/null 2>&1; then
            echo "::error::iconv не найден, хотя должен быть в системе!"
            exit 1
          fi

      - name: Download and convert data
        run: |
          # Скачиваем данные (3 попытки)
          for i in {1..3}; do
            curl -L -f "https://docs.google.com/spreadsheets/d/1J1GEEx5o7JiZGz60MGQw7bNxNYBJyuIVDASf-uNs_To/export?format=csv" -o data.csv && break || sleep 5
          done || { echo "::error::Не удалось скачать CSV"; exit 1; }

          # Проверяем кодировку и конвертируем
          echo "=== Проверка кодировки ==="
          file -bi data.csv
          echo "=== Первые строки ==="
          head -n 3 data.csv
          echo "===================="

          # Конвертируем используя встроенный iconv
          /usr/bin/iconv -f WINDOWS-1251 -t UTF-8 data.csv > data_clean.csv || {
            echo "::warning::Пробуем альтернативную кодировку CP1251..."
            /usr/bin/iconv -f CP1251 -t UTF-8 data.csv > data_clean.csv || {
              echo "::error::Не удалось конвертировать кодировку"
              echo "Попробуйте сохранить таблицу в UTF-8 напрямую"
              exit 1
            }
          }

          # Конвертируем в JSON
          jq -Rn '
            [inputs
             | select(length > 0)
             | gsub("\""; "") | split(",")
             | select(length >= 3)
             | {
                 "name": .[0],
                 "events": (.[1] | try tonumber catch 0),
                 "points": (.[2] | try tonumber catch 0),
                 "place": (.[3] | try tonumber catch 0)
               }
            ]' < data_clean.csv > data.json || {
              echo "::error::Ошибка при создании JSON"
              exit 1
            }

          # Проверяем результат
          if [ ! -s data.json ]; then
            echo "::error::Получен пустой JSON-файл"
            exit 1
          fi

      - name: Commit changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if git diff --no-patch --exit-code data.json; then
            echo "Нет изменений для коммита"
          else
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add data.json
            git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M')"
            git push
          fi
