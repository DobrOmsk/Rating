name: Update Volunteer Data
on:
  schedule:
    - cron: '0 * * * *'  # Обновление каждый час
  workflow_dispatch:     # Разрешить ручной запуск

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y python3
          python3 -m pip install pandas

      - name: Download and process data
        run: |
          # Скачиваем данные (3 попытки)
          for i in {1..3}; do
            curl -L -f "https://docs.google.com/spreadsheets/d/e/2PACX-1vT1ZqIl-YoI4bkefOkLBYPj3QcVEsXgnnhfW65ku2gvNj65ungX5tIpzbRo9DMTMaqSlvats--5e5V_/pub?gid=0&single=true&output=csv" -o data.csv && break || sleep 5
          done || { echo "::error::Не удалось скачать CSV"; exit 1; }

          # Конвертируем в JSON с правильными названиями колонок
          python3 -c "
          import pandas as pd
          import json
          
          # Читаем CSV файл
          df = pd.read_csv('data.csv', encoding='utf-8-sig')
          
          # Удаляем полностью пустые строки
          df = df.dropna(how='all')
          
          # Переименовываем колонки для единообразия
          df.columns = ['name', 'events', 'points', 'place']
          
          # Заменяем NaN на 0 в числовых колонках
          df['events'] = df['events'].fillna(0).astype(int)
          df['points'] = df['points'].fillna(0).astype(int)
          df['place'] = df['place'].fillna(0).astype(int)
          
          # Сохраняем в JSON
          df.to_json('data.json', orient='records', force_ascii=False, indent=2)
          "

          # Проверяем результат
          if [ $(stat -c%s "data.json") -lt 10 ]; then
            echo "::error::Получен пустой JSON-файл"
            exit 1
          fi

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Настраиваем Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Коммитим изменения
          git add data.json
          if [ -z "$(git status --porcelain)" ]; then
            echo "Нет изменений для коммита"
            exit 0
          fi
          
          git commit -m "Automatic data update: $(date +'%Y-%m-%d %H:%M')"
          git pull --rebase
          git push origin HEAD
