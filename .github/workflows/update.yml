name: Update Volunteer Data
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pandas

      - name: Download data
        run: |
          curl -L "https://docs.google.com/spreadsheets/d/e/2PACX-1vT1ZqIl-YoI4bkefOkLBYPj3QcVEsXgnnhfW65ku2gvNj65ungX5tIpzbRo9DMTMaqSlvats--5e5V_/pub?gid=0&single=true&output=csv" -o data.csv
          echo "=== Первые строки CSV ==="
          head -n 5 data.csv
          echo "=== Все заголовки ==="
          head -n 1 data.csv | tr ',' '\n'

      - name: Convert to JSON
        run: |
          python <<EOF
          import pandas as pd
          try:
              # Читаем CSV с правильной кодировкой
              df = pd.read_csv('data.csv', encoding='utf-8-sig')
              
              # Проверяем наличие всех нужных колонок
              required_columns = ['Место', 'ФИО', 'Добрые дела', 'Баллы']
              missing = [col for col in required_columns if col not in df.columns]
              if missing:
                  raise ValueError(f"Отсутствуют колонки: {missing}")
              
              # Выбираем и переименовываем колонки
              df = df[required_columns]
              df.columns = ['place', 'name', 'events', 'points']
              
              # Удаляем пустые строки и сортируем
              df = df.dropna()
              df = df.sort_values('place')
              
              # Сохраняем в JSON
              df.to_json('data.json', orient='records', indent=2, force_ascii=False)
              print(f"Успешно обработано {len(df)} записей")
          except Exception as e:
              print(f"Ошибка обработки: {str(e)}")
              exit(1)
          EOF

      - name: Commit and push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add data.json
          git commit -m "Autoupdate $(date +'%Y-%m-%d %H:%M')" || exit 0
          git push
