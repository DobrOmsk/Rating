name: Update Volunteer Data
on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pandas

      - name: Download data
        run: |
          curl -L -f "https://docs.google.com/spreadsheets/d/e/2PACX-1vT1ZqIl-YoI4bkefOkLBYPj3QcVEsXgnnhfW65ku2gvNj65ungX5tIpzbRo9DMTMaqSlvats--5e5V_/pub?gid=0&single=true&output=csv" -o data.csv
          echo "=== Первые 3 строки CSV ==="
          head -n 3 data.csv

      - name: Process data
        run: |
          python -c "
          import pandas as pd
          import json
          
          # Читаем CSV файл
          df = pd.read_csv('data.csv', encoding='utf-8-sig')
          
          # Выводим все доступные колонки
          print('Обнаруженные колонки:', list(df.columns))
          
          # Автоматически определяем колонки по содержимому
          result = []
          for _, row in df.iterrows():
              entry = {}
              # Ищем ФИО (первая текстовая колонка)
              for col in df.columns:
                  if pd.api.types.is_string_dtype(row[col]) and not entry.get('name'):
                      entry['name'] = row[col]
                  # Ищем баллы (первая числовая колонка)
                  elif pd.api.types.is_numeric_dtype(row[col]) and not entry.get('points'):
                      entry['points'] = int(row[col])
                  # Ищем место (вторая числовая колонка)
                  elif pd.api.types.is_numeric_dtype(row[col]) and 'points' in entry and not entry.get('place'):
                      entry['place'] = int(row[col])
                  # Ищем мероприятия (третья числовая колонка)
                  elif pd.api.types.is_numeric_dtype(row[col]) and 'points' in entry and 'place' in entry and not entry.get('events'):
                      entry['events'] = int(row[col])
              
              if len(entry) == 4:  # Проверяем что все поля найдены
                  result.append(entry)
          
          # Сортируем по месту
          result.sort(key=lambda x: x['place'])
          
          # Сохраняем в JSON
          with open('data.json', 'w', encoding='utf-8') as f:
              json.dump(result, f, ensure_ascii=False, indent=2)
          
          print('Успешно обработано записей:', len(result))
          "

      - name: Commit and push
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add data.json
          git commit -m "Autoupdate $(date +'%Y-%m-%d %H:%M')" || exit 0
          git push
